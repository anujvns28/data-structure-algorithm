class Solution {
public:
    unordered_map<char,string>mp ={{'2',"abc"},{'3',"def"},{'4',"ghi"},{'5',"jkl"},{'6',"mno"},{'7',"pqrs"},{'8',"tuv"},{'9',"wxyz"}};

    void letterCom_healper(string digits,vector<string>&ans,string&str,int i){
        // base case
        if(digits.size()==str.size()){
            ans.push_back(str);
            return;
        }

        for(int j=0;j<mp[digits[i]].size();j++){
            str.push_back(mp[digits[i]][j]);
            letterCom_healper(digits,ans,str,i+1);
            str.pop_back();
        }
    }
    vector<string> letterCombinations(string digits) {
        if(digits.size()==0) return {};
        vector<string>ans;
        string str = "";

        letterCom_healper(digits,ans,str,0);

        return ans;

    }
};
